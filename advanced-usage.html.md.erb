---
breadcrumb: PCF Dev Documentation
title: Advanced Usage of PCF Dev
owner: PCF Dev
---

## <a id="network"></a>Network Configuration 

When running on Virtualbox, PCF Dev will try to use `local.pcfdev.io` as the system domain, where `*.local.pcfdev.io` resolves to `192.168.11.11`. If the subnet containing `192.168.11.11` is already in use, PCF Dev will pick the next available IP that adheres to the pattern `198.168.xx.11`, and a corresponding system domain. For example, `198.168.44.11` and `local4.pcfdev.io`.

If you are launching PCF Dev in AWS, the system domain is the IP of the instance followed by `.xip.io`.

In order to bring up PCF Dev on a custom IP or system domain, you must set the `PCFDEV_IP` and `PCF_DOMAIN` environment variables when starting the cluster.

## <a id="memory"></a> Memory & CPU 

By default PCF Dev will try to allocate half of the memory available on your host machine with a minimum of 2GB and a maximum of 4GB.

Set the `VM_MEMORY` environment variable to change the allocated memory. This value is in megabytes.

PCF Dev will try to use all host cores. Set the `VM_CORES` environmnet variable to change this behavior.

## <a id="vagrant"></a> Using Vagrant 

You can use vagrant directly instead of using the provided `start`, `stop`, and `destroy` scripts. For example, in a terminal window:

* Run `vagrant up --provider=<provider>` to bring up the VM. 
* To stop the VM, enter `vagrant halt`. 
* Rerun `vagrant up` to restart a stopped VM. 
* `vagrant destroy` permanently destroys the VM. 

See the [Vagrant documentation](https://www.vagrantup.com/docs/) for more details.
